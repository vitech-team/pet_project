language: java
jdk: oraclejdk8

branches:
  only:
  - master

resources:
# AWS integration needed by Terraform
- name: aws_keys
  type: integration
  integration: "aws"
# Cognito integration needed for OAuth
- name: cognito
  type: integration
  integration: "Cognito"
# State resource to store Terraform State
- name: aws_ecs_tf_state
  type: state
# Load balacer info output
- name: alb_name
  type: params
  versionTemplate:
    params:
      SEED: "initial_version"
- name: docker_image
  type: image
  integration: DockerHub
  versionTemplate:
    sourceName: vitechpetproject/pet_project
    versionName: "initial"


before_script:
  - chmod +x ./gradlew

build:
  cache: true
  cache_dir_list:
  - $HOME/.gradle/
  - $SHIPPABLE_BUILD_DIR/dev-flow-sample-ui/node_modules/

  pre_ci_boot:
    image_name: vitechpetproject/ci
    image_tag: ubuntu.18.04-gradle.5-openjdk.8-npm.6.4.1-nodejs.8.10.0-terraform.0.11.10
    pull: true

  ci:
  # project build
  - ./gradlew clean build jacocoRootReport sonarqube buildDockerImage -Dsonar.pullrequest.base=$PULL_REQUEST_BASE_BRANCH  -Dsonar.pullrequest.branch=$HEAD_BRANCH -Dsonar.pullrequest.key=$TRAVIS_PULL_REQUEST

  # push image to DockerHub
  - docker tag vitech-team/pet_project:ci vitechpetproject/pet_project:$COMMIT
  - docker push vitechpetproject/pet_project:$COMMIT
  # modify output image resource
  - shipctl post_resource_state docker_image versionName $COMMIT

  # terraform provisioning
  - export AWS_ACCESS_KEY=$(shipctl get_integration_resource_field aws_keys "accessKey")
  - export AWS_SECRET_KEY=$(shipctl get_integration_resource_field aws_keys "secretKey")
  - pushd $SHIPPABLE_BUILD_DIR/terraform
  - shipctl replace terraform.tfvars
  - terraform init
  - terraform apply -auto-approve -var-file=terraform.tfvars
  - shipctl copy_file_to_resource_state $SHIPPABLE_BUILD_DIR/terraform/terraform.tfstate aws_ecs_tf_state
  - cat $SHIPPABLE_BUILD_DIR/terraform/terraform.tfstate
  - popd

  always:
  - cd $SHIPPABLE_BUILD_DIR
  # while image is started (move to other place)
  - sleep 60

  # terraform de-provisioning
  - pushd $SHIPPABLE_BUILD_DIR/terraform
  - terraform destroy -force -auto-approve -var-file=terraform.tfvars
  - popd
  - shipctl copy_file_to_resource_state $SHIPPABLE_BUILD_DIR/terraform/terraform.tfstate aws_ecs_tf_state
  - cat $SHIPPABLE_BUILD_DIR/terraform/terraform.tfstate
  - shipctl put_resource_state_multi alb_name "alb_name=$(terraform output alb_hostname)"

  # for test coverage analysis
  - cp -r $SHIPPABLE_BUILD_DIR/**/build/test-results/test/* shippable/testresults
  - cp -r $SHIPPABLE_BUILD_DIR/build/target shippable/codecoverage
  - cp -r $SHIPPABLE_BUILD_DIR/dev-flow-sample-ui/coverage/cobertura-coverage.xml shippable/codecoverage
  - cp -r $SHIPPABLE_BUILD_DIR/dev-flow-sample-ui/coverage/junit.xml shippable/testresults

integrations:
  hub:
  - integrationName: DockerHub
    type: dockerRegistryLogin

  notifications:
  - integrationName: Slack
    type: slack
    recipients:
      - "#elligo-tech-space"

jobs:
  - name: pet_project_runCI
    type: runCI
    steps:
    - OUT: docker_image
    - OUT: aws_ecs_tf_state
    - OUT: alb_name
    - IN: aws_keys
      switch: off
    - IN: cognito
      switch: off
